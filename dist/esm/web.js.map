{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ZebraDiscoveryResult, ZebraPrinterStatus, CapacitorZebraPrinterBTPlugin } from './definitions';\n\n\nexport class CapacitorZebraPrinterBTWeb extends WebPlugin implements CapacitorZebraPrinterBTPlugin {\n  private printers = [\n    {\n      name: 'Test Printer 1',\n      address: 'A1B2C3D4E5F607',\n      manufacturer: 'TEST',\n      modelNumber: 'TEST-1234',\n      connected: false\n    },\n    {\n      name: 'Test Printer 2',\n      address: 'A1B2C3D4E5F608',\n      manufacturer: 'TEST',\n      modelNumber: 'TEST-1234',\n      connected: false\n    }\n  ];\n  private connectedPrinter: any = null;\n\n  constructor() {\n    super({\n      name: 'ZebraCapacitorPlugin',\n      platforms: ['web'],\n    });\n  }\n\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  async discover(): Promise<ZebraDiscoveryResult> {\n    console.log(\"ZebraPluginWeb::discover\");\n    return {\n      printers: this.printers\n    };\n  }\n\n  async printerStatus(): Promise<ZebraPrinterStatus> {\n    console.log(\"ZebraPluginWeb::printerStatus\");\n    return new Promise(resolve => setTimeout(() => {\n      let status = {\n        connected: false,\n        isReadyToPrint: false,\n        isPaused: false,\n        isReceiveBufferFull: false,\n        isRibbonOut: false,\n        isPaperOut: false,\n        isHeadTooHot: false,\n        isHeadOpen: false,\n        isHeadCold: false,\n        isPartialFormatInProgress: false\n      };\n      if (this.connectedPrinter != null) {\n        status.connected = true;\n        status.isReadyToPrint = true;\n      }\n      resolve(status);\n      return status;\n    }, 500));\n  }\n\n  async print(options: { cpcl: string }): Promise<any> {\n    console.log(\"ZebraPluginWeb::print\", options.cpcl);\n    return new Promise(resolve => setTimeout(() => {\n      resolve(true);\n    }, 1000));\n  }\n\n  async isConnected(): Promise<{ connected: boolean }> {\n    return new Promise((resolve, _reject) => {\n      console.log(\"ZebraPluginWeb::isConnected\");\n\n      resolve({ connected: this.connectedPrinter != null });\n    });\n  }\n\n  async connect(options: { MACAddress: string }): Promise<{ success: boolean }> {\n    console.log(\"ZebraPluginWeb::connect\", options.MACAddress);\n\n    return new Promise(resolve => setTimeout(() => {\n      const printer = this.printers.find(p => p.address == options.MACAddress);\n      if (printer != null) {\n        printer.connected = true;\n\n        // if we were previously connected to a printer, mark it as not connected\n        if(this.connectedPrinter){\n          this.connectedPrinter.connected = false;\n        }\n\n        // set our connectPrinter to this one\n        this.connectedPrinter = printer;\n        resolve({ success: true });\n      };\n      resolve({ success: false });\n    }, 1000));\n  }\n\n  async disconnect(): Promise<void> {\n    return new Promise((resolve, _reject) => {\n      console.log(\"ZebraPluginWeb::disconnect\");\n      resolve();\n    });\n  }\n}\n"]}